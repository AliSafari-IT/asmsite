"use strict";(self.webpackChunkasmsite=self.webpackChunkasmsite||[]).push([[5971],{1897:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var r=o(4848),n=o(8453);const a={sidebar_position:1,title:"In brief"},s=void 0,i={id:"learn/dotnet/dotnet.core/intro",title:"In brief",description:".NET Core is a free, open-source, cross-platform framework for building modern software applications. It allows developers to write and run applications on multiple operating systems, such as Windows, Linux, and macOS. It also provides access to a large library of pre-built code and tools that help developers create high-performance, scalable, and secure applications.",source:"@site/docs/020-learn/0201-dotnet/dotnet.core/intro.md",sourceDirName:"020-learn/0201-dotnet/dotnet.core",slug:"/learn/dotnet/dotnet.core/intro",permalink:"/docs/learn/dotnet/dotnet.core/intro",draft:!1,unlisted:!1,editUrl:"https://github.com/AliSafari-IT/asmsite/docs/020-learn/0201-dotnet/dotnet.core/intro.md",tags:[],version:"current",lastUpdatedBy:"asafarim",lastUpdatedAt:1714173849e3,sidebarPosition:1,frontMatter:{sidebar_position:1,title:"In brief"},sidebar:"tutorialSidebar",previous:{title:"Mercurial",permalink:"/docs/devtools/versioncontrol/mercurial"},next:{title:"React Single Page Application",permalink:"/docs/learn/react/intro"}},c={},l=[];function d(e){const t={p:"p",...(0,n.R)(),...e.components};return(0,r.jsx)(t.p,{children:".NET Core is a free, open-source, cross-platform framework for building modern software applications. It allows developers to write and run applications on multiple operating systems, such as Windows, Linux, and macOS. It also provides access to a large library of pre-built code and tools that help developers create high-performance, scalable, and secure applications."})}function p(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,t,o)=>{o.d(t,{R:()=>s,x:()=>i});var r=o(6540);const n={},a=r.createContext(n);function s(e){const t=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:s(e.components),r.createElement(a.Provider,{value:t},e.children)}}}]);